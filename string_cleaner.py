list_letter = [i.upper() for i in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 
                                    'h', 'i', 'j', 'k', 'l', 'm', 'n', 
                                    'o', 'p', 'q', 'r', 's', 't', 'u', 
                                    'v', 'w', 'x', 'y', 'z', 
                                    '0',  '1', '2', '3', '4', '5', '6', '7', '8', '9']]
ns_countries = ['Afghanistan',
 'Aland Islands',
 'Albania',
 'Algeria',
 'American Samoa',
 'Andorra',
 'Angola',
 'Anguilla',
 'Antarctica',
 'Antigua and Barbuda',
 'Argentina',
 'Armenia',
 'Aruba',
 'Australia',
 'Austria',
 'Azerbaijan',
 'Bahamas',
 'Bahrain',
 'Bangladesh',
 'Barbados',
 'Belarus',
 'Belgium',
 'Belize',
 'Benin',
 'Bermuda',
 'Bhutan',
 'Bolivia',
 '"Bonaire, Saint Eustatius, and Saba"',
 'Bosnia and Herzegovina',
 'Botswana',
 'Bouvet Island',
 'Brazil',
 'British Indian Ocean Territory',
 'Brunei Darussalam',
 'Bulgaria',
 'Burkina Faso',
 'Burundi',
 'Cambodia',
 'Cameroon',
 'Canada',
 'Canary Islands',
 'Cape Verde',
 'Cayman Islands',
 'Central African Republic',
 'Ceuta and Melilla',
 'Chad',
 'Chile',
 'China',
 'Christmas Island',
 'Cocos (Keeling) Islands',
 'Colombia',
 'Comoros',
 '"Congo, Democratic People\'s Republic"',
 '"Congo, Republic of"',
 'Cook Islands',
 'Costa Rica',
 "Cote d'Ivoire",
 'Croatia/Hrvatska',
 'Cuba',
 'Curacao',
 'Cyprus',
 'Czech Republic',
 'Denmark',
 'Djibouti',
 'Dominica',
 'Dominican Republic',
 'East Timor',
 'Ecuador',
 'Egypt',
 'El Salvador',
 'Equatorial Guinea',
 'Eritrea',
 'Estonia',
 'Ethiopia',
 'Falkland Islands',
 'Faroe Islands',
 'Fiji',
 'Finland',
 'France',
 'French Guiana',
 'French Polynesia',
 'French Southern Territories',
 'Gabon',
 'Gambia',
 'Georgia',
 'Germany',
 'Ghana',
 'Gibraltar',
 'Greece',
 'Greenland',
 'Grenada',
 'Guadeloupe',
 'Guam',
 'Guatemala',
 'Guernsey',
 'Guinea',
 'Guinea-Bissau',
 'Guyana',
 'Haiti',
 'Heard and McDonald Islands',
 'Holy See (City Vatican State)',
 'Honduras',
 'Hong Kong',
 'Hungary',
 'Iceland',
 'India',
 'Indonesia',
 'Iran (Islamic Republic of)',
 'Iraq',
 'Ireland',
 'Isle of Man',
 'Israel',
 'Italy',
 'Jamaica',
 'Japan',
 'Jersey',
 'Jordan',
 'Kazakhstan',
 'Kenya',
 'Kiribati',
 '"Korea, Democratic People\'s Republic"',
 '"Korea, Republic of"',
 'Kosovo',
 'Kuwait',
 'Kyrgyzstan',
 '"Lao, People\'s Democratic Republic"',
 'Latvia',
 'Lebanon',
 'Lesotho',
 'Liberia',
 'Libya',
 'Liechtenstein',
 'Lithuania',
 'Luxembourg',
 'Macau',
 'Macedonia',
 'Madagascar',
 'Malawi',
 'Malaysia',
 'Maldives',
 'Mali',
 'Malta',
 'Marshall Islands',
 'Martinique',
 'Mauritania',
 'Mauritius',
 'Mayotte',
 'Mexico',
 '"Micronesia, Federal State of"',
 '"Moldova, Republic of"',
 'Monaco',
 'Mongolia',
 'Montenegro',
 'Montserrat',
 'Morocco',
 'Mozambique',
 'Myanmar',
 'Namibia',
 'Nauru',
 'Nepal',
 'Netherlands',
 'New Caledonia',
 'New Zealand',
 'Nicaragua',
 'Niger',
 'Nigeria',
 'Niue',
 'Norfolk Island',
 'Northern Mariana Islands',
 'Norway',
 'Oman',
 'Pakistan',
 'Palau',
 'Panama',
 'Papua New Guinea',
 'Paraguay',
 'Peru',
 'Philippines',
 'Pitcairn Island',
 'Poland',
 'Portugal',
 'Puerto Rico',
 'Qatar',
 'Reunion Island',
 'Romania',
 'Russian Federation',
 'Rwanda',
 'Saint BarthÃ©lemy',
 'Saint Helena',
 'Saint Kitts and Nevis',
 'Saint Lucia',
 'Saint Martin',
 'Saint Vincent and the Grenadines',
 'Samoa',
 'San Marino',
 'Sao Tome and Principe',
 'Saudi Arabia',
 'Senegal',
 'Serbia',
 'Seychelles',
 'Sierra Leone',
 'Singapore',
 'Sint Maarten',
 'Slovak Republic',
 'Slovenia',
 'Solomon Islands',
 'Somalia',
 'South Africa',
 'South Georgia',
 'South Sudan',
 'Spain',
 'Sri Lanka',
 'State of Palestine',
 'St. Pierre and Miquelon',
 'Sudan',
 'Suriname',
 'Svalbard and Jan Mayen Islands',
 'Swaziland',
 'Sweden',
 'Switzerland',
 'Syrian Arab Republic',
 'Taiwan',
 'Tajikistan',
 'Tanzania',
 'Thailand',
 'Togo',
 'Tokelau',
 'Tonga',
 'Trinidad and Tobago',
 'Tunisia',
 'Turkey',
 'Turkmenistan',
 'Turks and Caicos Islands',
 'Tuvalu',
 'Uganda',
 'Ukraine',
 'United Arab Emirates',
 'United Kingdom',
 'United States',
 'Uruguay',
 'US Minor Outlying Islands',
 'Uzbekistan',
 'Vanuatu',
 'Venezuela',
 'Vietnam',
 '"Virgin Islands, British"',
 '"Virgin Islands, USA"',
 'Wallis and Futuna Islands',
 'Western Sahara',
 'Yemen',
 'Zambia',
 'Zimbabwe']


def mushing(mpn):
    """
    Mushed part number, removing special character and spaces. 
    """
    mpn = mpn.upper()
    
    return ''.join([i for i in mpn if i in list_letter])

def num_mushing(mpn):
    """
    Mushed part number, removing special character and spaces. 
    """
    mpn = mpn.lower()
    
    return ''.join([i for i in mpn if i in list_letter])

def checkingLetters(string, characters = list_letter):
    """
    Checking to see if string has certian character. 
    characters ( list of individual string characters)
    """
    return sum([1 for i in string if i in character]) > 0    

def findSpecialCharecters(list_of_strings):
    """
    Find non-leter and non-number character in a list of string (or dataframe column)
    Returns a list of string with individual special characters
    """
    character_set = set()
    for row in list_of_strings:
        for character in row:
            character_set.add(character)
    return [character for character in character_set if character  not in list_letter]


def removeChars(list_of_strings, list_of_characters):
    """
    """
    return [''.join([character for character in str(row) if character not in list_of_characters]) for row in list_of_strings]

def showDF(dataframe):
    """
    """
    print(f"Number of Records - {len(dataframe)}")
    return dataframe.head(1)

def show_dictionary(list_):
    """
    """
    for i in list_:
        print(f"{repr(i)}: 'None',")
        pass




